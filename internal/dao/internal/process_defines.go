// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// ProcessDefinesDao is the data access object for table process_defines.
type ProcessDefinesDao struct {
	table   string                // table is the underlying table name of the DAO.
	group   string                // group is the database configuration group name of current DAO.
	columns ProcessDefinesColumns // columns contains all the column names of Table for convenient usage.
}

// ProcessDefinesColumns defines and stores column names for table process_defines.
type ProcessDefinesColumns struct {
	Id         string //
	ProcessId  string // 流程的id
	NodeName   string // 节点名称
	NextId     string // 下节点id
	NextName   string // 下一节点名称
	RejectId   string // 驳回节点id
	RejectName string // 驳回节点名称
	Type       string // 节点类型
	NodeInfo   string // 节点信息
}

// processDefinesColumns holds the columns for table process_defines.
var processDefinesColumns = ProcessDefinesColumns{
	Id:         "id",
	ProcessId:  "process_id",
	NodeName:   "node_name",
	NextId:     "next_id",
	NextName:   "next_name",
	RejectId:   "reject_id",
	RejectName: "reject_name",
	Type:       "type",
	NodeInfo:   "node_info",
}

// NewProcessDefinesDao creates and returns a new DAO object for table data access.
func NewProcessDefinesDao() *ProcessDefinesDao {
	return &ProcessDefinesDao{
		group:   "default",
		table:   "process_defines",
		columns: processDefinesColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *ProcessDefinesDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *ProcessDefinesDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *ProcessDefinesDao) Columns() ProcessDefinesColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *ProcessDefinesDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *ProcessDefinesDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *ProcessDefinesDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
